"Automated installation of vimplug if not installed
" For NeoVim
if empty(glob('~/.local/share/nvim/site/autoload/plug.vim'))
    silent !curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source ~/.config/nvim/init.vim
endif

" For Vim
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source ~/.vimrc
endif

" FORMAT
set encoding=utf-8
set ambiwidth=single
set fileencoding=utf-8
set fileformats=unix
let mapleader=" "

" FILE TYPES
filetype on
filetype plugin on

" THEME
set guifont=Menlo\ Regular:h16
" set lines=60 columns=120
set colorcolumn=90
set number
syntax on

" SEARCH
set hlsearch
nnoremap <silent> <Esc> :nohlsearch<Bar>:echo<CR>

" PERFORMANCES & HISTORY
set nobackup
set nowritebackup
set laststatus=2
set hidden
set history=100
set updatetime=300

" SWAP FILES
set shortmess+=c

" TEXT FORMATTING
filetype indent on
set nowrap
set tabstop=2
set shiftwidth=2
set expandtab
set smartindent
set autoindent
set signcolumn=yes

autocmd BufWritePre * :%s/\s\+$//e " Remove whitespaces on save

" Plugins
call plug#begin('~/.config/nvim/plugged')

" NerdTree
Plug 'preservim/nerdtree'
nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>
" autocmd VimEnter * NERDTree
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

" FZF
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

Plug 'prettier/vim-prettier', {
  \ 'do': 'yarn install --frozen-lockfile --production',
  \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue', 'svelte', 'yaml', 'html'] }

Plug 'itchyny/lightline.vim'
let g:lightline = {
      \ 'colorscheme': 'srcery_drk',
      \ 'active': {
      \   'left': [['mode', 'paste' ], ['readonly', 'filename', 'modified']],
      \   'right': [['lineinfo'], ['percent'], ['fileformat', 'fileencoding']]
      \ }      
  \ }

call plug#end()
